apiVersion: v1
kind: Template
metadata:
  labels:
      app: "${APP_NAME}"
  name: react-frontend-template
  annotations:
    description: "ReactJS frontend Template for COE Demo"
    iconClass: "icon-nodejs"
    tags: "ReactJS"
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: "${APP_NAME}"
    name: "${APP_NAME}"
  spec:
    tags:
      - annotations:
        name: 'latest'

- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: "${APP_NAME}"
    name: "${APP_NAME}"
  spec:
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: "${GIT_URL}"
      type: Git
    strategy:
      dockerStrategy:
        env:
          - name: REACT_APP_API_URL
            value: "${REACT_APP_API_URL}"
    output:
      to:
        kind: ImageStreamTag
        name: '${APP_NAME}:latest'
    triggers:
      - github:
          secret: zaNxjceBxQzaiGIARHYz
        type: GitHub
      - generic:
          secret: f4MEQCTU5bZwghNAJsEV
        type: Generic
      - type: ConfigChange
      - imageChange:
        type: ImageChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: "${APP_NAME}"
    name: "${APP_NAME}"
  spec:
    replicas: 1
    selector:
      app: "${APP_NAME}"
      deploymentconfig: "${APP_NAME}"
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: "${APP_NAME}"
          deploymentconfig: "${APP_NAME}"
      spec:
        containers:
          - env:
              - name: REACT_APP_API_URL
                value: "${REACT_APP_API_URL}"
            imagePullPolicy: Always
            name: "${APP_NAME}"
            ports:
              - containerPort: 8080
                protocol: TCP
            resources: {}
        restartPolicy: Always
    test: false
    triggers:
      - imageChangeParams:
          containerNames:
            - "${APP_NAME}"
          from:
            kind: ImageStreamTag
            name: '${APP_NAME}:latest'
        type: ImageChange

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: "${APP_NAME}"
    name: "${APP_NAME}"
  spec:
    ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      app: "${APP_NAME}"
      deploymentconfig: "${APP_NAME}"
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: "${APP_NAME}"
    name: "${APP_NAME}"
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: "${APP_NAME}"
      weight: 100
    wildcardPolicy: None

parameters:
  - name: APP_NAME
    description: "Application name for bc,dc,is etc"
    value: "react-frontend-app"
  - name: GIT_URL
    description: "The GIT repository for the source code and Jenkinsfile"
    value: 'https://github.com/akilans/openshift-react-frontend.git'
  - name: REACT_APP_API_URL
    description: "Route URL for node-backend-app - DNS name with /api"
    value: "http://node-backend-app/api"
    required: true